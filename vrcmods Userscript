// ==UserScript==
// @name         vrcmods Userscript
// @namespace    http://tampermonkey.net/
// @version      0.4
// @description  try to take over the world!
// @match        *://vrcmods.net/*

// @match        *://vrcmods.com/*
// @match        *://www.google.com/recaptcha/*
// @match        *://newassets.hcaptcha.com/captcha/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=vrcmods.com
// @grant        GM_addStyle
// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_addValueChangeListener
// @grant        GM_removeValueChangeListener
// ==/UserScript==

function tF(f,{callback,int}){
    !callback&&(callback=function(){});!int&&(int=100)
    console.log({f,callback,int})
    var a
    try{a=f();callback(a);return}catch(err){}
    var _=setInterval(()=>{try{a=f();callback(a);clearInterval(_)}catch(err){}},int||100)
    return _
}

var caps=['newassets.hcaptcha.com/captcha','www.google.com/recaptcha']
if(!!caps.filter(c=>location.href.includes(c)).length){
    GM_setValue('Cap',false)
    console.log('Capchta test')
    getElementByAttribute=function getElementByAttribute(label,item='aria-label',doc=document.body){
        var res=[];
        function part2(e){
            if(e.getAttribute(item)==label){
                res.push(e);
            }else{
                if(e.children.length){
                    e=e.children;
                    e.forEach=[].forEach;
                    e.forEach(e2=>{
                        part2(e2);
                    })
                }
            }
        };
        part2(doc);
        return res.length==1?res[0]:res||false;
    }
    let get_aria_label=function (label,doc=document.body){
        var res=[];
        function part2(e){
            if(e.getAttribute('aria-label')==label){
                res.push(e);
            }else{
                if(e.children.length){
                    e=e.children;
                    e.forEach=[].forEach;
                    e.forEach(e2=>{
                        part2(e2);
                    })
                }
            }
        };
        part2(doc);
        return res[0]||false;
    }
    let findhref2=function (a,b){
        var res=[];

        function part2(e){
            if(e.tagName.toLowerCase()==(b||'a')){
                res.push(e);
                if(e.children.length){
                    e=e.children;
                    e.forEach=[].forEach;
                    e.forEach(e2=>{
                        part2(e2);
                    })
                }
            }else{
                if(e.children.length){
                    e=e.children;
                    e.forEach=[].forEach;
                    e.forEach(e2=>{
                        part2(e2);
                    })
                }
            }
        };
        part2(a);
        return res
    }
    function post(){
        GM_setValue('Cap',true)
    }
    function solve(){
        GM_setValue('Cap',null)
        console.log('Solving')
        console.log(getElementByAttribute('checkbox','role'))
        setTimeout(()=>{console.log(getElementByAttribute('checkbox','role'))},2000)
        getElementByAttribute('checkbox','role').click()
        ;(new Promise(a=>{
            var Myloop=setInterval(()=>(getElementByAttribute('true','aria-checked')&&getElementByAttribute('true','aria-checked').length&&(clearInterval(Myloop),a())))
        })).then(post)
    }
    addEventListener('load',solve)
    return
}
GM_setValue('Cap',null)
GM_addValueChangeListener('Cap', function(name, old_value, new_value, remote) {
    console.log({name, old_value, new_value, remote})
})
var parts='https://vrcmods.com/download/direct/0'.split('/')
function isDisabled(){return[...document.getElementById('download').classList].includes('disabled')}
var p=location.href.split('/');
var setInstant=false
if(p[3]==parts[3]&&p[4]!=parts[4]){
    setInstant=true
}
tF(function(){
    var a=Array(...document.getElementsByTagName('a')).map(a=>[a.classList,Array(...a.classList),a]).filter(e=>{var cont=true;'btn btn-primary btn-lg btn-block'.split(' ').forEach(b=>{if(!e[1].includes(b))cont=false;});return cont;})[0][2]
    if(a){
        //a.href=`/download/direct/${location.href.match(/\d+/gi)[0]}`
        a.innerText='Instant Download'
        a.target='about:blank_'
    }
    else throw "s";
},
    {int:100,callback:function(){console.log('D')}})
tF(function(){
    var a=document.getElementById('download')
    if(a){
        //a.href=`/download/direct/${location.href.match(/\d+/gi)[0]}`
        a.innerText='Solving captcha'
        if(isDisabled())throw 'Disabled'
        a.innerText='HeHeHeha GrR'
        const {href}=a
        open(href)
        close()
    }
    else throw "s";
},
    {int:100,callback:function(){console.log('EZ')}})
